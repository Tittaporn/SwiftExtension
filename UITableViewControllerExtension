//  ExtenstionUITableViewController.swift

import Foundation
import UIKit
import DropDown
import JGProgressHUD
import StepIndicator
import MaterialComponents.MaterialTextControls_FilledTextAreasTheming
import MaterialComponents.MaterialTextControls_FilledTextFieldsTheming
import MaterialComponents.MaterialTextControls_OutlinedTextAreasTheming
import MaterialComponents.MaterialTextControls_OutlinedTextFieldsTheming

extension UITableViewController {
    // MARK: - OverrideUserInterfaceStyle
    func overrideUserInterfaceStyleTableViewToLightMode() {
        // Supported only Light mode
        if #available(iOS 13.0, *) {
            overrideUserInterfaceStyle = .light
        }
    }
    
    // MARK: - StepIndicator
    func setupStepIndicatorWithButton(stepIndicator: StepIndicatorView, currentStep: Int, button: UIButton ) {
        let cordinate = self.tableView.getCoordinate(button)
        stepIndicator.frame = CGRect(x: 0, y: cordinate.y + 40, width: self.tableView.frame.width * 0.8, height: 70)
        stepIndicator.center.x = self.tableView.center.x
        self.tableView.addSubview(stepIndicator)
        stepIndicator.circleTintColor = (.rmsBlue ?? .systemBlue)
        stepIndicator.lineTintColor =  (.rmsBlue ?? .systemBlue)
        stepIndicator.numberOfSteps = 6
        stepIndicator.currentStep = currentStep
    }
    
    func startSpinningForTableView(with spinner: JGProgressHUD, text: String) {
        DispatchQueue.main.async {
            spinner.style = .light
            spinner.textLabel.text = text
            spinner.textLabel.textColor = .systemGray
            spinner.textLabel.font = UIFont(name: "CourierNewPSMT", size: 12)
            spinner.detailTextLabel.textColor = .systemGray
            spinner.detailTextLabel.font = UIFont(name: "CourierNewPSMT", size: 10)
            spinner.backgroundColor = .rmsBlueLightBG
            spinner.shadow  = JGProgressHUDShadow(color:  .systemGray, offset: .zero, radius: 6.0, opacity: 0.2)
            spinner.position = .center
            spinner.show(in: self.tableView, animated: true)
        }
    }
    
    func reloadAndScrollToTop() {
        self.tableView.reloadData()
        self.tableView.layoutIfNeeded()
        self.tableView.contentOffset = CGPoint(x: 0, y: -tableView.contentInset.top)
    }
}
